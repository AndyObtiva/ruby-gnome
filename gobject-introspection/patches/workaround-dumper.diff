diff --git a/girepository/gdump.c b/girepository/gdump.c
index 6aa8bfd1..61600d34 100644
--- a/girepository/gdump.c
+++ b/girepository/gdump.c
@@ -453,9 +453,8 @@ g_irepository_dump (const char *arg, GError **error)
 {
   GHashTable *output_types;
   char **args;
-  GFile *input_file;
   GFile *output_file;
-  GFileInputStream *input;
+  GInputStream *input;
   GFileOutputStream *output;
   GDataInputStream *in;
   GModule *self;
@@ -474,26 +473,29 @@ g_irepository_dump (const char *arg, GError **error)
 
   args = g_strsplit (arg, ",", 2);
 
-  input_file = g_file_new_for_path (args[0]);
+  {
+    gchar *contents;
+    gsize length;
+    if (g_file_get_contents (args[0], &contents, &length, error))
+      {
+        input = g_memory_input_stream_new_from_data (contents, length, g_free);
+      }
+    else
+      {
+        g_strfreev (args);
+        return FALSE;
+      }
+  }
   output_file = g_file_new_for_path (args[1]);
 
   g_strfreev (args);
 
-  input = g_file_read (input_file, NULL, error);
-  g_object_unref (input_file);
-
-  if (input == NULL)
-    {
-      g_object_unref (output_file);
-      return FALSE;
-    }
-
   output = g_file_replace (output_file, NULL, FALSE, 0, NULL, error);
   g_object_unref (output_file);
 
   if (output == NULL)
     {
-      g_input_stream_close (G_INPUT_STREAM (input), NULL, NULL);
+      g_input_stream_close (input, NULL, NULL);
       return FALSE;
     }
 
@@ -502,7 +504,7 @@ g_irepository_dump (const char *arg, GError **error)
 
   output_types = g_hash_table_new (NULL, NULL);
 
-  in = g_data_input_stream_new (G_INPUT_STREAM (input));
+  in = g_data_input_stream_new (input);
   g_object_unref (input);
 
   while (TRUE)
@@ -576,8 +578,8 @@ g_irepository_dump (const char *arg, GError **error)
       ioerror = error;
     if (!g_input_stream_close (G_INPUT_STREAM (in), NULL, ioerror))
       return FALSE;
-    if (!g_output_stream_close (G_OUTPUT_STREAM (output), NULL, ioerror))
-      return FALSE;
+    /* if (!g_output_stream_close (G_OUTPUT_STREAM (output), NULL, ioerror)) */
+    /*   return FALSE; */
   }
 
   return !caught_error;
